# amcl:
#   ros__parameters:
#     alpha1: 0.2
#     alpha2: 0.2
#     alpha3: 0.2
#     alpha4: 0.2
#     alpha5: 0.2
#     base_frame_id: "base_link"
#     beam_skip_distance: 0.5
#     beam_skip_error_threshold: 0.9
#     beam_skip_threshold: 0.3
#     do_beamskip: false
#     global_frame_id: "map"
#     lambda_short: 0.1
#     laser_likelihood_max_dist: 2.0
#     laser_max_range: 25.0
#     laser_min_range: -1.0
#     laser_model_type: "likelihood_field"
#     max_beams: 60
#     max_particles: 2000
#     min_particles: 500
#     odom_frame_id: "odom"
#     pf_err: 0.05
#     pf_z: 0.99
#     recovery_alpha_fast: 0.0
#     recovery_alpha_slow: 0.0
#     resample_interval: 1
#     robot_model_type: "nav2_amcl::DifferentialMotionModel"
#     save_pose_rate: 0.5
#     sigma_hit: 0.2
#     tf_broadcast: true
#     transform_tolerance: 1.0
#     update_min_a: 0.2
#     update_min_d: 0.25
#     z_hit: 0.5
#     z_max: 0.05
#     z_rand: 0.5
#     z_short: 0.05
#     scan_topic: scan/filtered

# bt_navigator:
#   ros__parameters:
#     use_sim_time: True
#     global_frame: map
#     robot_base_frame: base_link
#     odom_topic: /odometry/filtered
#     bt_loop_duration: 10
#     default_server_timeout: 20
#     wait_for_service_timeout: 1000
#     # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
#     # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
#     # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
#     # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.

#     #default_nav_to_pose_bt_xml: /ulstu/ros2_ws/src/webots_ros2_suv/config/behavior_tree.xml
#     # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
#     # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
#     # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
#     # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
#     default_nav_to_pose_bt_xml: "/bmstu/ros2_ws/src/main/config/navigate_to_pose_w_replanning_and_recovery.xml"
#     default_nav_through_poses_bt_xml: "/bmstu/ros2_ws/src/main/config/navigate_through_poses_w_replanning_and_recovery.xml"
#     plugin_lib_names:
#       - nav2_compute_path_to_pose_action_bt_node
#       - nav2_compute_path_through_poses_action_bt_node
#       - nav2_smooth_path_action_bt_node
#       - nav2_follow_path_action_bt_node
#       - nav2_spin_action_bt_node
#       - nav2_wait_action_bt_node
#       - nav2_assisted_teleop_action_bt_node
#       - nav2_back_up_action_bt_node
#       - nav2_drive_on_heading_bt_node
#       - nav2_clear_costmap_service_bt_node
#       - nav2_is_stuck_condition_bt_node
#       - nav2_goal_reached_condition_bt_node
#       - nav2_goal_updated_condition_bt_node
#       - nav2_globally_updated_goal_condition_bt_node
#       - nav2_is_path_valid_condition_bt_node
#       - nav2_initial_pose_received_condition_bt_node
#       - nav2_reinitialize_global_localization_service_bt_node
#       - nav2_rate_controller_bt_node
#       - nav2_distance_controller_bt_node
#       - nav2_speed_controller_bt_node
#       - nav2_truncate_path_action_bt_node
#       - nav2_truncate_path_local_action_bt_node
#       - nav2_goal_updater_node_bt_node
#       - nav2_recovery_node_bt_node
#       - nav2_pipeline_sequence_bt_node
#       - nav2_round_robin_node_bt_node
#       - nav2_transform_available_condition_bt_node
#       - nav2_time_expired_condition_bt_node
#       - nav2_path_expiring_timer_condition
#       - nav2_distance_traveled_condition_bt_node
#       - nav2_single_trigger_bt_node
#       - nav2_goal_updated_controller_bt_node
#       - nav2_is_battery_low_condition_bt_node
#       - nav2_navigate_through_poses_action_bt_node
#       - nav2_navigate_to_pose_action_bt_node
#       - nav2_remove_passed_goals_action_bt_node
#       - nav2_planner_selector_bt_node
#       - nav2_controller_selector_bt_node
#       - nav2_goal_checker_selector_bt_node
#       - nav2_controller_cancel_bt_node
#       - nav2_path_longer_on_approach_bt_node
#       - nav2_wait_cancel_bt_node
#       - nav2_spin_cancel_bt_node
#       - nav2_back_up_cancel_bt_node
#       - nav2_assisted_teleop_cancel_bt_node
#       - nav2_drive_on_heading_cancel_bt_node
#       - nav2_is_battery_charging_condition_bt_node

# bt_navigator_navigate_through_poses_rclcpp_node:
#   ros__parameters:
#     use_sim_time: True

# bt_navigator_navigate_to_pose_rclcpp_node:
#   ros__parameters:
#     use_sim_time: True

# controller_server:
#   ros__parameters:
#     use_sim_time: True
#     controller_frequency: 30.0
#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.5
#     min_theta_velocity_threshold: 0.001
#     progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
#     goal_checker_plugins: ["goal_checker"]
#     controller_plugins: ["FollowPath"]

#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 4.0
#       yaw_goal_tolerance: 0.9
#       stateful: True
#     FollowPath:
#       plugin: "nav2_rotation_shim_controller::RotationShimController"
#       angular_dist_threshold: 0.785
#       forward_sampling_distance: 5.0
#       angular_disengage_threshold: 0.3925
#       rotate_to_heading_angular_vel: 1.8
#       max_angular_accel: 3.2
#       simulate_ahead_time: 1.0
#       rotate_to_goal_heading: true


#       primary_controller: "nav2_mppi_controller::MPPIController"
#       time_steps: 15
#       model_dt: 0.07
#       batch_size: 4000
#       vx_std: 3.5
#       vy_std: 0.2
#       wz_std: 1.0
#       vx_max: 5.0
#       vx_min: -0.5
#       vy_max: 0.5
#       wz_max: 2.0
#       ax_max: 3.0
#       ax_min: -3.0
#       ay_min: -3.0
#       ay_max: 3.0
#       az_max: 3.5
#       iteration_count: 1
#       prune_distance: 0.30
#       transform_tolerance: 0.5
#       temperature: 0.3
#       gamma: 0.015
#       motion_model: "DiffDrive"
#       visualize: false
#       reset_period: 1.0 # (only in Humble)
#       regenerate_noises: false
#       TrajectoryVisualizer:
#         trajectory_step: 5
#         time_step: 3
#       # AckermannConstraints:
#       #   min_turning_r: 0.2
#       critics: ["ObstaclesCritic","ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
#       ConstraintCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 4.0
#       GoalCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         threshold_to_consider: 1.4
#       GoalAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 3.0
#         threshold_to_consider: 0.5
#       PreferForwardCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         threshold_to_consider: 0.5
#       ObstaclesCritic:
#         enabled: true
#         cost_power: 1
#         repulsion_weight: 1.5
#         critical_weight: 20.0
#         consider_footprint: true
#         collision_cost: 10000.0
#         collision_margin_distance: 0.8
#         near_goal_distance: 0.05
#         inflation_radius: 1.5 # (only in Humble)
#         cost_scaling_factor: 2.0 # (only in Humble)
#       CostCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 3.81
#         critical_cost: 300.0
#         consider_footprint: true
#         collision_cost: 1000000.0
#         near_goal_distance: 1.0
#         trajectory_point_step: 2
#       PathAlignCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 14.0
#         max_path_occupancy_ratio: 0.05
#         trajectory_point_step: 4
#         threshold_to_consider: 0.5
#         offset_from_furthest: 20
#         use_path_orientations: false
#       PathFollowCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         offset_from_furthest: 5
#         threshold_to_consider: 1.4
#       PathAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 2.0
#         offset_from_furthest: 4
#         threshold_to_consider: 0.5
#         max_angle_to_furthest: 1.0
#         mode: 0
#       # VelocityDeadbandCritic:
#       #   enabled: true
#       #   cost_power: 1
#       #   cost_weight: 35.0
#       #   deadband_velocities: [0.05, 0.05, 0.05]
#       # TwirlingCritic:
#       #   enabled: true
#       #   twirling_cost_power: 1
#       #   twirling_cost_weight: 10.0


# local_costmap:
#   local_costmap:
#     ros__parameters:
#       update_frequency: 10.0
#       publish_frequency: 10.0
#       global_frame: odom
#       robot_base_frame: base_link
#       rolling_window: true
#       width: 50
#       height: 50
#       resolution: 0.1
#       robot_radius: 0.9
#       plugins: ["obstacle_layer","voxel_layer","inflation_layer"]
#       # custom_layer:
#       #   plugin: "custom_costmap_layer/CustomLayer"
#       #   enabled: true
#       #   radius: 0.5
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 2.0
#         inflation_radius: 1.50
#       obstacle_layer:
#         plugin: "nav2_costmap_2d::ObstacleLayer"
#         enabled: True
#         observation_sources: scan
#         scan:
#           topic: /scan/filtered
#           max_obstacle_height: 20.0
#           min_obstacle_height: -5.0
#           clearing: True
#           marking: True
#           combination_method: 1
#           sensor_frame: lidar_link
#           data_type: "LaserScan"
#           raytrace_max_range: 200.0
#           raytrace_min_range: 0.0
#           obstacle_max_range: 5.0
#           obstacle_min_range: 0.0
#       voxel_layer:
#         plugin: "nav2_costmap_2d::VoxelLayer"
#         enabled: True
#         footprint_clearing_enabled: true
#         max_obstacle_height: 2.0
#         publish_voxel_map: True
#         origin_z: 0.0
#         z_resolution: 0.05
#         z_voxels: 16
#         max_obstacle_height: 2.0
#         unknown_threshold: 15
#         mark_threshold: 0
#         observation_sources: pointcloud
#         combination_method: 1
#         pointcloud:  # no frame set, uses frame from message
#           topic: /depth/point_cloud
#           max_obstacle_height: 2.0
#           min_obstacle_height: -0.1
#           obstacle_max_range: 4.0
#           obstacle_min_range: 0.0
#           raytrace_max_range: 5.0
#           raytrace_min_range: 0.0
#           clearing: True
#           marking: True
#           sensor_frame: cam_link
#           data_type: "PointCloud2"
          
#       # static_layer:
#       #   plugin: "nav2_costmap_2d::StaticLayer"
#       #   map_subscribe_transient_local: True
#       always_send_full_costmap: True

# global_costmap:
#   global_costmap:
#     ros__parameters: 
#       update_frequency: 10.0
#       publish_frequency: 10.0
#       global_frame: map
#       robot_base_frame: base_link
#       robot_radius: 0.9       # !!!
#       resolution: 0.1
#       track_unknown_space: false
#       rolling_window: True
#       width: 150
#       height: 150
#       origin_x: 25.0
#       origin_y: 25.0
#       plugins: [  "obstacle_layer","inflation_layer"]
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 0.25  # !!
#         inflation_radius: 1.0   # !!
#       obstacle_layer:
#           plugin: "nav2_costmap_2d::ObstacleLayer"
#           enabled: True
#           observation_sources: scan
#           scan:
#             topic: /depth/point_cloud
#             max_obstacle_height: 20.0
#             min_obstacle_height: 0.2
#             clearing: True
#             marking: True
#             sensor_frame: cam_link
#             data_type: "PointCloud2"
#             raytrace_max_range: 20.0
#             raytrace_min_range: 0.0
#             obstacle_max_range: 20.0
#             obstacle_min_range: 0.0

#       # static_layer:
#       #   plugin: "nav2_costmap_2d::StaticLayer"
#       #   map_subscribe_transient_local: True
#       always_send_full_costmap: True

# # The yaml_filename does not need to be specified since it going to be set by defaults in launch.
# # If you'd rather set it in the yaml, remove the default "map" value in the tb3_simulation_launch.py
# # file & provide full path to map below. If CLI map configuration or launch default is provided, that will be used.
# # map_server:
# #   ros__parameters:
# #     yaml_filename: ""

# map_saver:
#   ros__parameters:
#     save_map_timeout: 5.0
#     free_thresh_default: 0.25
#     occupied_thresh_default: 0.65
#     map_subscribe_transient_local: True


# planner_server:
#   ros__parameters:
#     planner_plugins: ["GridBased"]

#     GridBased:
#       plugin: "nav2_smac_planner/SmacPlannerLattice"
#       tolerance: 0.5                      # tolerance for planning if unable to reach exact pose, in meters
#       downsample_costmap: false           # whether or not to downsample the map
#       downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
#       allow_unknown: true                # allow traveling in unknown space
#       max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
#       max_on_approach_iterations: 1000    # maximum number of iterations to attempt to reach goal once in tolerance
#       terminal_checking_interval: 5000     # number of iterations between checking if the goal has been cancelled or planner timed out
#       max_planning_time: 3.5              # max time in s for planner to plan, smooth, and upsample. Will scale maximum smoothing and upsampling times based on remaining time after planning.
#       motion_model_for_search: "DUBIN"    # For Hybrid Dubin, Reeds-Shepp
#       cost_travel_multiplier: 2.0         # For 2D: Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
#       angle_quantization_bins: 64         # For Hybrid nodes: Number of angle bins for search, must be 1 for 2D node (no angle search)
#       analytic_expansion_ratio: 3.5       # For Hybrid/Lattice nodes: The ratio to attempt analytic expansions during search for final approach.
#       analytic_expansion_max_length: 3.0    # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting (in meters). This should be scaled with minimum turning radius and be no less than 4-5x the minimum radius
#       analytic_expansion_max_cost: 200   # For Hybrid/Lattice nodes: The maximum single cost for any part of an analytic expansion to contain and be valid (except when necessary on approach to goal)
#       analytic_expansion_max_cost_override: false # For Hybrid/Lattice nodes: Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required). If expansion is within 2*pi*min_r of the goal, then it will override the max cost if ``false``.
#       minimum_turning_radius: 10.00       # For Hybrid/Lattice nodes: minimum turning radius in m of path / vehicle
#       reverse_penalty: 2.1                # For Reeds-Shepp model: penalty to apply if motion is reversing, must be => 1
#       change_penalty: 0.5                 # For Hybrid nodes: penalty to apply if motion is changing directions, must be >= 0
#       non_straight_penalty: 1.20          # For Hybrid nodes: penalty to apply if motion is non-straight, must be => 1
#       cost_penalty: 2.0                   # For Hybrid nodes: penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
#       retrospective_penalty: 0.025        # For Hybrid/Lattice nodes: penalty to prefer later maneuvers before earlier along the path. Saves search time since earlier nodes are not expanded until it is necessary. Must be >= 0.0 and <= 1.0
#       rotation_penalty: 1.0               # For Lattice node: Penalty to apply only to pure rotate in place commands when using minimum control sets containing rotate in place primitives. This should always be set sufficiently high to weight against this action unless strictly necessary for obstacle avoidance or there may be frequent discontinuities in the plan where it requests the robot to rotate in place to short-cut an otherwise smooth path for marginal path distance savings.
#       lookup_table_size: 20.0               # For Hybrid nodes: Size of the dubin/reeds-sheep distance window to cache, in meters.
#       cache_obstacle_heuristic: True      # For Hybrid nodes: Cache the obstacle map dynamic programming distance expansion heuristic between subsequent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
#       allow_reverse_expansion: False      # For Lattice nodes: Whether to expand state lattice graph in forward primitives or reverse as well, will double the branching factor at each step.
#       smooth_path: True                   # For Lattice/Hybrid nodes: Whether or not to smooth the path, always true for 2D nodes.
#       debug_visualizations: True                # For Hybrid/Lattice nodes: Whether to publish expansions on the /expansions topic as an array of poses (the orientation has no meaning) and the path's footprints on the /planned_footprints topic. WARNING: heavy to compute and to display, for debug only as it degrades the performance.
#       smoother:
#         max_iterations: 1000
#         w_smooth: 0.3
#         w_data: 0.2
#         tolerance: 1.0e-10
#         do_refinement: true               # Whether to recursively run the smoother 3 times on the results from prior runs to refine the results further

# behavior_server:
#   ros__parameters:
#     local_costmap_topic: local_costmap/costmap_raw
#     global_costmap_topic: global_costmap/costmap_raw
#     local_footprint_topic: local_costmap/published_footprint
#     global_footprint_topic: global_costmap/published_footprint
#     cycle_frequency: 10.0
#     behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
#     spin:
#       plugin: "nav2_behaviors/Spin"
#     backup:
#       plugin: "nav2_behaviors/BackUp"
#       backup_speed: 0.5
#       backup_dist: 1.0
#     drive_on_heading:
#       plugin: "nav2_behaviors/DriveOnHeading"
#       # speed: 0.5
#     wait:
#       plugin: "nav2_behaviors/Wait"
#     assisted_teleop:
#       plugin: "nav2_behaviors/AssistedTeleop"
#     local_frame: odom
#     global_frame: map
#     robot_base_frame: base_link
#     transform_tolerance: 0.1
#     simulate_ahead_time: 5.0
#     max_rotational_vel: 2.0
#     min_rotational_vel: 1.0
#     rotational_acc_lim: 0.25

# waypoint_follower:
#   ros__parameters:
#     loop_rate: 20
#     stop_on_failure: false
#     action_server_result_timeout: 900.0
#     waypoint_task_executor_plugin: "wait_at_waypoint"
#     wait_at_waypoint:
#       plugin: "nav2_waypoint_follower::WaitAtWaypoint"
#       enabled: True
#       waypoint_pause_duration: 200

# velocity_smoother:
#   ros__parameters:
#     smoothing_frequency: 20.0
#     scale_velocities: False
#     feedback: "OPEN_LOOP"
#     max_velocity: [5.0, 5.0, 1.5]
#     min_velocity: [-2.0, -1.0, -1.5]
#     max_accel: [2.25, 0.0, 0.25]
#     max_decel: [-2.25, 0.0, -0.25]
#     odom_topic: "odometry/filtered"
#     odom_duration: 0.5
#     deadband_velocity: [0.0, 0.0, 0.0]
#     velocity_timeout: 1.0
amcl:
  ros__parameters:
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 25.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: false
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan/filtered
    set_initial_pose: True
    initial_pose: [0.0, 0.0, 0.0, 0.0]

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odometry/filtered
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    default_nav_to_pose_bt_xml: "/bmstu/ros2_ws/src/main/config/navigate_to_pose_w_replanning_and_recovery.xml"
    default_nav_through_poses_bt_xml: "/bmstu/ros2_ws/src/main/config/navigate_through_poses_w_replanning_and_recovery.xml"  
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node


bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True


# controller_server:
#   ros__parameters:
#     controller_frequency: 10.0
#     min_x_velocity_threshold: 0.1
#     min_y_velocity_threshold: 0.5
#     min_theta_velocity_threshold: 0.1
#     progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
#     goal_checker_plugins: ["goal_checker"]
#     controller_plugins: ["FollowPath"]

#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 4.0
#       yaw_goal_tolerance: 0.5
#       stateful: True

#     FollowPath:
#       plugin: "nav2_mppi_controller::MPPIController"
#       time_steps: 60
#       model_dt: 0.1
#       batch_size: 2000
#       vx_std: 4.0
#       vy_std: 0.0
#       wz_std: 1.0
#       vx_max: 5.0
#       vx_min: -1.0
#       vy_max: 0.0
#       wz_max: 2.5
#       ax_max: 3.0
#       ax_min: -3.0
#       ay_max: 0.0
#       az_max: 3.5
#       iteration_count: 1
#       prune_distance: 10.0
#       transform_tolerance: 0.1
#       temperature: 0.1
#       gamma: 0.015
#       motion_model: "DiffDrive"
#       visualize: true
#       reset_period: 1.0 # (only in Humble)
#       regenerate_noises: false
#       TrajectoryVisualizer:
#         trajectory_step: 15
#         time_step: 10
#       AckermannConstraints:
#         min_turning_r: 0.2
#       critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
#       ConstraintCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 4.0
#       GoalCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         threshold_to_consider: 1.4
#       GoalAngleCritic:
#         enabled: true
#         cost_power: 2
#         cost_weight: 3.0
#         threshold_to_consider: 0.5
#       PreferForwardCritic:
#         enabled: true
#         cost_power: 2
#         cost_weight: 5.0
#         threshold_to_consider: 0.5
#       # ObstaclesCritic:
#       #   enabled: true
#       #   cost_power: 1
#       #   repulsion_weight: 1.5
#       #   critical_weight: 20.0
#       #   consider_footprint: false
#       #   collision_cost: 10000.0
#       #   collision_margin_distance: 0.1
#       #   near_goal_distance: 0.5
#       #   inflation_radius: 0.55 # (only in Humble)
#       #   cost_scaling_factor: 10.0 # (only in Humble)
#       CostCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 3.81
#         critical_cost: 300.0
#         consider_footprint: true
#         collision_cost: 1000000.0
#         near_goal_distance: 1.0
#         trajectory_point_step: 2
#       PathAlignCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 14.0
#         max_path_occupancy_ratio: 0.05
#         trajectory_point_step: 4
#         threshold_to_consider: 0.5
#         offset_from_furthest: 20
#         use_path_orientations: false
#       PathFollowCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 14.0
#         offset_from_furthest: 5
#         threshold_to_consider: 1.4
#       PathAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 12.0
#         offset_from_furthest: 4
#         threshold_to_consider: 0.5
#         max_angle_to_furthest: 1.0
#         mode: 0
#       # VelocityDeadbandCritic:
#       #   enabled: true
#       #   cost_power: 1
#       #   cost_weight: 35.0
#       #   deadband_velocities: [0.05, 0.05, 0.05]
#       # TwirlingCritic:
#       #   enabled: true
#       #   twirling_cost_power: 1
#       #   twirling_cost_weight: 10.0
controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 4.0
      yaw_goal_tolerance: 0.5
      stateful: True
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 5.0
      lookahead_dist: 7.5
      min_lookahead_dist: 5.0
      max_lookahead_dist: 9.0
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 2.0
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.5
      approach_velocity_scaling_dist: 6.0
      use_collision_detection: false
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 1.0
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 9.0
      regulated_linear_scaling_min_speed: 0.5
      use_rotate_to_heading: true
      allow_reversing: true
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 32.0
      max_robot_pose_search_dist: 15.0
      stateful: true

global_costmap:
  global_costmap:
    ros__parameters:
      footprint_padding: 0.03
      update_frequency: 2.5
      publish_frequency: 2.5
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      width: 200
      height: 200
      robot_radius: 1.0 # radius set and used, so no footprint points
      resolution: 0.5
      origin_x: 1.0
      origin_y: 1.0
      rolling_window: true
      track_unknown_space: false
      # plugins: ["static_layer", "obstacle_layer", "stvl_layer", "inflation_layer"]
      plugins: ["voxel_layer", "static_layer", "obstacle_layer", "inflation_layer"]
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        footprint_clearing_enabled: true
        max_obstacle_height: 2.0
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        unknown_threshold: 15
        mark_threshold: 0
        observation_sources: pointcloud
        combination_method: 1
        pointcloud:  # no frame set, uses frame from message
          topic: /depth/point_cloud
          max_obstacle_height: 2.0
          min_obstacle_height: -0.1
          obstacle_max_range: 4.0
          obstacle_min_range: 0.0
          raytrace_max_range: 5.0
          raytrace_min_range: 0.0
          clearing: True
          marking: True
          sensor_frame: cam_link
          data_type: "PointCloud2"
      obstacle_layer:
          plugin: "nav2_costmap_2d::ObstacleLayer"
          enabled: True
          max_obstacle_height: 20.0
          min_obstacle_height: -5.0
          observation_sources: scan
          scan:
            topic: /scan/filtered
            max_obstacle_height: 20.0
            min_obstacle_height: -5.0
            clearing: True
            marking: True
            combination_method: 1
            sensor_frame: lidar_link
            data_type: "LaserScan"
            raytrace_max_range: 200.0
            raytrace_min_range: 0.0
            obstacle_max_range: 250.0
            obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: false
        subscribe_to_updates: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 3.5
        cost_scaling_factor: 0.5
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: True

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      rolling_window: true
      width: 100
      height: 100
      resolution: 0.5
      robot_radius: 1.0
      plugins: ["obstacle_layer", "voxel_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan/filtered
          max_obstacle_height: 20.0
          min_obstacle_height: -5.0
          clearing: True
          marking: True
          combination_method: 1
          sensor_frame: lidar_link
          data_type: "LaserScan"
          raytrace_max_range: 200.0
          raytrace_min_range: 0.0
          obstacle_max_range: 5.0
          obstacle_min_range: 0.0
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        footprint_clearing_enabled: true
        max_obstacle_height: 2.0
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        unknown_threshold: 15
        mark_threshold: 0
        observation_sources: pointcloud
        combination_method: 1
        pointcloud:  # no frame set, uses frame from message
          topic: /depth/point_cloud
          max_obstacle_height: 2.0
          min_obstacle_height: -0.1
          obstacle_max_range: 4.0
          obstacle_min_range: 0.0
          raytrace_max_range: 5.0
          raytrace_min_range: 0.0
          clearing: True
          marking: True
          sensor_frame: cam_link
          data_type: "PointCloud2"
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 2.0
        cost_scaling_factor: 1.0

      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True




map_server:
  ros__parameters:
    use_sim_time: True
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_theta_star_planner/ThetaStarPlanner" # In Iron and older versions, "/" was used instead of "::"
      how_many_corners: 8
      w_euc_cost: 1.0
      w_traversal_cost: 4.0
      w_heuristic_cost: 1.0


smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: True
    simulate_ahead_time: 2.0
    max_rotational_vel: 2.0
    min_rotational_vel: 0.5
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [5.0, 0.0, 2.0]
    min_velocity: [-5.0, 0.0, -2.0]
    max_accel: [14.0, 0.0, 15.0]
    max_decel: [-14.0, 0.0, -15.0]
    odom_topic: "odometry/filtered"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

collision_monitor:
  ros__parameters:
    use_sim_time: false
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    transform_tolerance: 0.5
    source_timeout: 5.0
    base_shift_correction: True
    stop_pub_timeout: 2.0
    # Polygons represent zone around the robot for "stop" and "slowdown" action types,
    # and robot footprint for "approach" action type.
    # Footprint could be "polygon" type with dynamically set footprint from footprint_topic
    # or "circle" type with static footprint set by radius. "footprint_topic" parameter
    # to be ignored in circular case.
    # polygons: ["PolygonLimit", "PolygonSlow", "FootprintApproach"]
    polygons: ["PolygonLimit", "PolygonSlow"]
    PolygonLimit:
      type: "polygon"
      points: [2.5, 1.25, 2.5, -1.25, -2.5, -1.25, -2.5, 1.25]
      action_type: "slowdown"
      min_points: 3
      slowdown_ratio: 0.1
      visualize: True
      polygon_pub_topic: "/polygon_limit"
      enabled: True
    PolygonSlow:
      type: "polygon"
      points: [8.0, 5.0, 8.0, -5.0, -5.0, -5.0, -5.0, 5.0]
      action_type: "slowdown"
      min_points: 1
      slowdown_ratio: 0.7
      visualize: True
      polygon_pub_topic: "/polygon_slowdown"
      enabled: True
    # FootprintApproach:
    #   type: "polygon"
    #   action_type: "approach"
    #   footprint_topic: "/local_costmap/published_footprint"

    #   time_before_collision: 1.0
    #   simulation_time_step: 0.1
    #   min_points: 4
    #   visualize: True
    #   enabled: True
    observation_sources: ["scan", "pointcloud"]
    scan:
      type: "scan"
      topic: "/scan/filtered"
      min_height: -2.0
      max_height: 5.0
      enabled: True
    pointcloud:
      type: "pointcloud"
      topic: "/depth/point_cloud"
      min_height: -0.2
      max_height: 0.5
      enabled: True